@page "/formfields/edit/{id}"
@inject Code.IFormFieldRepository Repo
@inject NavigationManager NavManager

@if(_formField == null)
{
    <h3>Please Wait</h3>

    <AeButton To="/formfields">Back</AeButton>
}
else
{
    <h3>@_formField.Section - @_formField.Field</h3>

    <AeModelForm
        Model="@_formField"
        SubmitLabel="Save Changes"
        OnValidSubmit="@HandleValidSubmit"
        CancelLabel="Reset"
        OnCancel="@HandleCancel"
    />

    <AeButton To=@($"/formfields/view/{_formField.FormFieldID}")>Back</AeButton>
}



@code {

    [Parameter]
    public string Id { get; set; }

    private FormField _formField;

    protected override async Task OnInitializedAsync()
    {
        _formField = await Repo.GetFormField(int.Parse(Id));
    }

    private async Task<FormField> HandleCancel()
    {
        NavManager.NavigateTo($"/formfields/view/{_formField.FormFieldID}");
        return _formField;
    }

    private async void HandleValidSubmit()
    {
        _formField = await Repo.UpdateFormField(_formField);
        NavManager.NavigateTo($"/formfields/view/{_formField.FormFieldID}");
    }

}
