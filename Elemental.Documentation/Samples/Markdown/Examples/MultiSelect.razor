@*
    Copyright (c) 2020 Apption Corporation

    This Source Code Form is subject to the terms of the Mozilla Public
    License, v. 2.0. If a copy of the MPL was not distributed with this
    file, You can obtain one at http://mozilla.org/MPL/2.0/.

    Title: Basic Multi-Select dropdown
    Description: Dropdown style selector, the OnChange function will be invoked once for every item you selected or deselected before closing. The boolean will be tru for selected and false for deselected
*@

<AeButton style="width:3rem;" @onclick="clearSelected" >Clear</AeButton>

<AeTypography>Selected items: </AeTypography>

@foreach (string _item in _selectedItems)
{
    <AeTypography>@_item</AeTypography>
}

<AeTypography>Removed items: </AeTypography>

@foreach (string _item in _removed)
{
    <AeTypography>@_item</AeTypography>
}

<AeTypography>Added items: </AeTypography>

@foreach (string _item in _added)
{
    <AeTypography>@_item</AeTypography>
}

<AeSelect T="string" 
        Label="Basic Select"
          Items="_dropdownItems"
          OnChange="@HandleDropdownChange" />

@code {
    private List<string> _selectedItems = new List<string>();
    private List<string> _added = new List<string>();
    private List<string> _removed = new List<string>();

  private List<string> _dropdownItems = new List<string>
    {
        "First", "Second", "Third", "Fourth", "Fifth", "Sixth"
    };

  private void clearSelected() {
      _selectedItems.Clear();
  }

  //This is invoked once for every item you selected before closing
  private void HandleDropdownChange(AeSelectChange<string> arg)
  {
      _removed = arg.RemovedItems.ToList();
      _added = arg.AddedItems.ToList();
      _selectedItems.AddRange(_added);
      _selectedItems = _selectedItems.Except(_removed).ToList();
      StateHasChanged();
  }
}
