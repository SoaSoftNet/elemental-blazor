{"version":3,"sources":["webpack://elemental/./js/ae_dropdown.js","webpack://elemental/./js/anchor.js","webpack://elemental/./js/clipboard-interop.js","webpack://elemental/./js/getDimensions.js","webpack://elemental/./js/initializeSidebar.js","webpack://elemental/./js/modal-helper.js","webpack://elemental/./js/saveAsFile.js","webpack://elemental/./js/tableToolTipHelper.js","webpack://elemental/./js/virtualScrolling.js","webpack://elemental/./js/walkThrough.js"],"names":["window","aedropdown","dropdowns","initialize","id","push","dispose","filter","_id","toggleVisibility","document","querySelector","classList","toggle","addEventListener","event","forEach","element","contains","target","remove","ScrollPos","HTMLElement","pos","getPositionOnDoc","scrollTo","top","ScrollPosFromId","getElementById","BlazorClipboadInterop","ListeningForPasteEvents","dotNetObject","e","pasteEvent","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","async","data","navigator","clipboard","read","items","i","length","item","j","types","type","blob","getType","startsWith","content","text","invokeMethodAsync","preventDefault","getDimensions","width","clientWidth","height","clientHeight","getPosition","rect","getBoundingClientRect","Math","floor","left","bottom","right","pageYOffset","pageXOffset","setZIndex","zIndex","style","initializeSidebar","ref","add","getInnerHeight","innerHeight","getInnerWidth","innerWidth","registerResizeCallback","resized","DotNet","then","modalHelper","scrollTop","scrollLeft","lockBodyScrolling","this","documentElement","getElementsByTagName","overflowY","position","getElementsByClassName","unlockBodyScrolling","setModalPosition","saveAsFile","filename","bytesBase64","msSaveBlob","_blazorDownloadFileData","atob","_blazorDownloadFileBytes","Uint8Array","charCodeAt","_blazorDownloadFileBlob","Blob","buffer","link","createElement","download","href","body","appendChild","click","removeChild","initializeToolTip","dotnetHelper","virtualScrolling","getScrollView","parseInt","walkThroughHelper","walkThrough","props","DotNetReference","dotNetReference","steps","sort","a","b","order","popperModifiers","modifiers","name","options","offset","allowedAutoPlacements","resize","vfdvd","tour","Shepherd","Tour","defaultStepOptions","cancelIcon","enabled","behavior","block","canClickTarget","clickable","popperOptions","useModalOverlay","overlay","step","addStep","title","attachTo","on","buttons","getButtons","overlap","altAxis","arrow","start","stepOrder","numOfSteps","buttonSet","back","classes","next"],"mappings":"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","file":"aebundle.js","sourcesContent":["﻿window.aedropdown = {\n    dropdowns: [],\n    initialize: (id) => {\n        window.aedropdown.dropdowns.push(id);\n    },\n    dispose: (id) => {\n        window.aedropdown.dropdowns = window.aedropdown.dropdowns.filter(_id => {\n            return _id !== id;\n        });\n    },\n    toggleVisibility: (id) => {\n        let element = document.querySelector(`[ae-id=\"${id}\"]`);\n        element.classList.toggle(\"visible\");\n    },\n}\n\ndocument.addEventListener('click', function (event) {\n    window.aedropdown.dropdowns.forEach(id => {\n        let element = document.querySelector(`[ae-id=\"${id}\"]`);\n        if (element.classList.contains(\"visible\") && !element.contains(event.target)) {\n            element.classList.remove(\"visible\");\n        }\n    })\n})\n","﻿function BlazorScrollToId(id) {\n    const element = document.getElementById(id);\n    if (element instanceof HTMLElement) {\n    element.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\",\n        inline: \"nearest\"\n    });\n    }\n}\n\nScrollPos = function (element) {\n    if (element instanceof HTMLElement) {\n        var pos = window.getPositionOnDoc(element);\n        window.scrollTo(0, pos.top);\n    }\n}\nScrollPosFromId = function (id) {\n    ScrollPos(document.getElementById(id));\n}\n\n","﻿window.BlazorClipboadInterop = window.BlazorClipboadInterop || {};\n\nwindow.BlazorClipboadInterop.ListeningForPasteEvents = function (element, dotNetObject) {\n    element.addEventListener('paste', function (e) { BlazorClipboadInterop.pasteEvent(e, dotNetObject) });\n};\n\nconst toBase64 = file => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n});\n\nwindow.BlazorClipboadInterop.pasteEvent =\n    async function (e, dotNetObject) {\n\n        var data = await navigator.clipboard.read();\n        var items = []; //is passed to C#\n\n        for (let i = 0; i < data.length; i++) {\n            var item = {};\n            items.push(item);\n            for (let j = 0; j < data[i].types.length; j++) {\n\n                const type = data[i].types[j];\n\n                const blob = await data[i].getType(type);\n                if (blob) {\n\n                    if (type.startsWith(\"text\") == true) {\n                        const content = await blob.text();\n                        item[type] = content;\n                    }\n                    else {\n                        item[type] = await toBase64(blob);\n                    }\n                }\n            }\n        }\n\n        await dotNetObject.invokeMethodAsync('Pasted', items);\n        e.preventDefault();\n    }\n","﻿//simple script for use with GetDimensionsService.cs\nwindow.getDimensions = function (element) {\n  return {\n    width: element.clientWidth,\n    height: element.clientHeight\n  };\n};\n\nwindow.getPosition = function (element) {    \n    var rect = element.getBoundingClientRect();\n    return {\n        top: Math.floor(rect.top),\n        left: Math.floor(rect.left),\n        bottom: Math.floor(rect.bottom),\n        right: Math.floor(rect.right)\n    };\n};\n\nwindow.getPositionOnDoc = function (element) {\n    var rect = window.getPosition(element)\n    return {\n        top: Math.floor(rect.top + window.pageYOffset),\n        left: Math.floor(rect.left + window.pageXOffset),\n        bottom: Math.floor(rect.bottom + window.pageYOffset),\n        right: Math.floor(rect.right + window.pageXOffset)\n    };\n};\n\nwindow.setZIndex = function (element, zIndex) {\n    element.style.zIndex = zIndex;\n}\n","﻿window.initializeSidebar = {\n    \n    initialize: (ref) => {\n        ref.addEventListener('mouseover', function () {\n            if (document.querySelector('.ae.side-nav').clientWidth <= 56) {\n                var rect = ref.getBoundingClientRect();\n                ref.querySelector('span').style.top = Math.floor(rect.top) + 'px';\n                ref.querySelector('span').classList.add(\"show\");\n            }\n        }); \n        ref.addEventListener('mouseout', function () {\n            if (document.querySelector('.ae.side-nav').clientWidth <= 56) {\n                ref.querySelector('span').classList.remove(\"show\");\n            }\n        }); \n    },\n\n    getInnerHeight: function () {\n        return window.innerHeight;\n    },\n    getInnerWidth: function () {\n        return window.innerWidth;\n    },\n    registerResizeCallback: function () {\n        window.addEventListener(\"resize\", initializeSidebar.resized);\n    },\n    resized: function () {\n        //DotNet.invokeMethod(\"BrowserResize\", 'OnBrowserResize');\n        DotNet.invokeMethodAsync(\"Elemental\", 'OnBrowserResize').then(data => data);\n    }\n   \n}\n\n\n","﻿window.modalHelper = {\n    scrollTop: null,\n    scrollLeft: null,\n    lockBodyScrolling: function () {        \n        this.scrollTop = document.documentElement.scrollTop;\n        this.scrollLeft = document.documentElement.scrollLeft;\n        document.getElementsByTagName('html')[0].style.overflowY = 'scroll';\n        document.getElementsByTagName('body')[0].style.top = -(document.documentElement.scrollTop) + 'px';        \n        document.getElementsByTagName('body')[0].style.position = 'fixed';\n        document.getElementsByTagName('body')[0].style.width = '100%';\n        document.getElementsByClassName('modal')[0].style.top = -(document.documentElement.scrollTop) + 'px';\n        \n    },\n\n    unlockBodyScrolling: function () {\n        document.getElementsByTagName('html')[0].style.overflowY = 'auto';\n        document.getElementsByTagName('body')[0].style.top = 'auto';\n        document.getElementsByTagName('body')[0].style.width = 'auto'; // the default for the css property\n        document.getElementsByTagName('body')[0].style.position = 'static'; // the default for the css property\n        window.scrollTo(this.scrollLeft, this.scrollTop);\n    },\n\n    setModalPosition: function () {\n    }\n}\n","﻿window.saveAsFile = (filename, bytesBase64) => {\n    if (navigator.msSaveBlob) {\n        //Download document in Edge\n        var _blazorDownloadFileData = atob(bytesBase64);\n        var _blazorDownloadFileBytes = new Uint8Array(_blazorDownloadFileData.length);\n        for (var i = 0; i < _blazorDownloadFileData.length; i++) {\n            {\n                _blazorDownloadFileBytes[i] = _blazorDownloadFileData.charCodeAt(i);\n            }\n        }\n        _blazorDownloadFileData = null;\n        var _blazorDownloadFileBlob = new Blob([_blazorDownloadFileBytes.buffer], { type: \"application/octet-stream\" });\n        _blazorDownloadFileBytes = null;\n        navigator.msSaveBlob(_blazorDownloadFileBlob, filename);\n        _blazorDownloadFileBlob = null;\n    }\n    else {\n        //Download document in other browsers\n        var link = document.createElement('a');\n        link.download = filename;\n        link.href = \"data:application/octet-stream;base64,\" + bytesBase64;\n        document.body.appendChild(link); // Needed for Firefox\n        link.click();\n        document.body.removeChild(link);\n    }\n\n}","﻿window.initializeToolTip = (element, dotnetHelper) => {\n    element.addEventListener('mouseout', () => {\n        dotnetHelper.invokeMethodAsync('OnMouseOutHideToolTip');\n    });\n}","﻿window.virtualScrolling = {    \n    getScrollView(ref) {\n        return { scrollTop: parseInt(ref.scrollTop), clientHeight: ref.clientHeight };\n\n    }\n\n};","﻿window.walkThroughHelper = {\n    walkThrough: function (props) {\n        var DotNetReference = props.dotNetReference;\n\n        var steps = props.steps.sort((a, b) => a.order - b.order);\n\n        var popperModifiers = {\n            modifiers: [{\n                name: 'offset', options: { offset: [0, 3] }\n            }, {\n                name: 'flip',\n                options: {\n                    allowedAutoPlacements: ['top', 'bottom', 'right', 'left'],\n                }\n            }, {\n                name: 'eventListeners',\n                options: {\n                    resize: true,\n                    vfdvd:true,\n                }\n            }]\n        }\n\n        const tour = new Shepherd.Tour({\n            defaultStepOptions: {\n                cancelIcon: {\n                    enabled: true\n                },\n                scrollTo: { behavior: 'smooth', block: 'center' },\n                canClickTarget: props.clickable ? true : false,\n                popperOptions: popperModifiers\n            },\n            useModalOverlay: props.overlay ? true : false\n        });\n\n        steps.forEach(step => {\n            tour.addStep({\n                title: step.title,\n                text: step.content,\n                attachTo: {\n                    element: step.id,\n                    on: step.position\n                },\n                buttons: this.getButtons(step.order, steps.length),\n                scrollTo: !step.scrollTo ? false : true,\n                popperOptions: !step.overlap ? { modifiers: [{ name: 'preventOverflow', options: { altAxis: false } }] } : popperModifiers,\n                id: step.id,\n                arrow: !step.arrow ? false : true\n            })\n        });\n\n        tour.on('complete', () => {\n            DotNetReference.invokeMethodAsync('WalkthroughCompleted')\n        });\n\n        tour.start();\n    },\n    getButtons: function (stepOrder, numOfSteps) {\n        var buttonSet = [];\n        if (stepOrder !== 1)\n            buttonSet.push({\n                action() {\n                    return this.back();\n                },\n                classes: 'shepherd-button-secondary',\n                text: 'Back'\n            });\n\n        buttonSet.push({\n            action() {\n                return this.next();\n            },\n            text: stepOrder == numOfSteps ? \"Exit\" : \"Next\"\n        })\n\n        return buttonSet;\n    }\n\n}"],"sourceRoot":""}