@typeparam T
@using Elemental.Components.Forms

<div class="e e-form-control-wrapper">
    @if (!string.IsNullOrWhiteSpace(GetLabel()))
    {
        <label class="e e-form-control-label" for="@GetID()">@GetLabel()</label>
    }
    <Microsoft.AspNetCore.Components.Forms.InputDate @bind-Value="PropertyValue" />
</div>

@code {

    //<AeInputText />

    [Parameter]
    public System.Reflection.PropertyInfo PropertyInfo { get; set; }

    [Parameter]
    public T Instance { get; set; }

    public DateTime PropertyValue
    {
        get => (DateTime)PropertyInfo.GetValue(Instance);
        set
        {
            PropertyInfo.SetValue(Instance, value);
        }
    }

    private string GetID() => PropertyInfo.Name;

    private string GetLabel()
    {

        var label = AeLabelAttribute.IsDefined(PropertyInfo, typeof(AeLabelAttribute))
            ? (AeLabelAttribute.GetCustomAttribute(PropertyInfo, typeof(AeLabelAttribute)) as AeLabelAttribute).Label
            : PropertyInfo.Name;

        return label + (IsRequired() ? "" : " (Optional)");
    }

    private bool IsRequired()
    {
        return System.ComponentModel.DataAnnotations.RequiredAttribute.IsDefined(PropertyInfo, typeof(System.ComponentModel.DataAnnotations.RequiredAttribute));
    }

}
