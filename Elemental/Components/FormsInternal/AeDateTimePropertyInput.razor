@typeparam T
@using Elemental.Components.Forms


    <AeFormLabel PropertyInfo="@PropertyInfo"/>


    <Microsoft.AspNetCore.Components.Forms.InputDate class="ae input" @bind-Value="PropertyValue" />

@if (AeModelFormTools.IsNullable(PropertyInfo))
{
    <div class="errortext">
        <Microsoft.AspNetCore.Components.Forms.ValidationMessage For="@(AeModelFormTools.GetExpression<DateTime?>(Instance,PropertyInfo))" />
    </div>
}
else
{
    <div class="errortext">
        <Microsoft.AspNetCore.Components.Forms.ValidationMessage For="@(AeModelFormTools.GetExpression<DateTime>(Instance,PropertyInfo))" />
    </div>    
}


@code {

    [Parameter]
    public System.Reflection.PropertyInfo PropertyInfo { get; set; }

    /// <summary>
    /// There are two major layout options. Standard has line based with label / field and compact has a tabular layout with CSS flex.
    /// </summary>
    [Parameter] public ModelFormStyle ModelFormStyle { get; set; }

    [Parameter]
    public T Instance { get; set; }

    public DateTime? PropertyValue
    {
        get => AeModelFormTools.AsNullableValue<DateTime>(PropertyInfo,Instance);
        set
        {
            PropertyInfo.SetValue(Instance, value);
        }
    }

    private string GetID() => PropertyInfo.Name;

}
